X_train,X_test,y_train,y_test=train_test_split(X,Y,test_size=0.1,random_state=1000)

xgboost_classifier = XGBClassifier(n_estimators = 50, max_depth = 4, random_state = 42, learning_rate = 0.05)
xgboost_classifier.fit(X_train, y_train)

# Predict label for the test data and print classification report and confusion matrix
prediction_values_xgboost = xgboost_classifier.predict(X_test)
print(metrics.classification_report(y_test, prediction_values_xgboost, digits = 2))
print(metrics.confusion_matrix(y_test, prediction_values_xgboost))
print("")
print("Accuracy: ",metrics.accuracy_score(y_test, prediction_values_xgboost,))
print("Recall: ",metrics.recall_score(y_test, prediction_values_xgboost, zero_division=1))
print("Precision: ",metrics.precision_score(y_test, prediction_values_xgboost, zero_division=1))
